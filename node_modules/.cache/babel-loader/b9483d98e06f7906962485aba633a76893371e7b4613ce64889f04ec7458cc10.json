{"ast":null,"code":"var _jsxFileName = \"/home/ewangclarks/Documents/Projects/Technical Interview/employee-sector-registration-react/src/components/sector/AddSector.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useFetch from \"../checkin/config/useFetch\";\nimport SectorList from \"./SectorList\";\nimport Loader from \"../loader/Loader\";\nimport DefaultSector from \"./DefaultSector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddSector = () => {\n  _s();\n  const emptyData = {\n    name: '',\n    sectors: [],\n    agreeTerms: false\n  };\n  const {\n    loading,\n    error,\n    data\n  } = useFetch({\n    url: \"api/protected/users/sectors/me\"\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      className: \"page-loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: error || data[0].sectors.length > 0 ? /*#__PURE__*/_jsxDEV(SectorList, {\n      ...data[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(DefaultSector, {\n      formData: emptyData,\n      isEdit: false,\n      selectedSectors: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n};\n_s(AddSector, \"pk1BMMMxVuMHvGLsaMJFBHFONp8=\", false, function () {\n  return [useFetch];\n});\n_c = AddSector;\nexport default AddSector;\nvar _c;\n$RefreshReg$(_c, \"AddSector\");","map":{"version":3,"names":["React","useFetch","SectorList","Loader","DefaultSector","jsxDEV","_jsxDEV","Fragment","_Fragment","AddSector","_s","emptyData","name","sectors","agreeTerms","loading","error","data","url","className","fileName","_jsxFileName","lineNumber","columnNumber","children","length","formData","isEdit","selectedSectors","_c","$RefreshReg$"],"sources":["/home/ewangclarks/Documents/Projects/Technical Interview/employee-sector-registration-react/src/components/sector/AddSector.js"],"sourcesContent":["import React from 'react';\nimport useFetch from \"../checkin/config/useFetch\";\nimport SectorList from \"./SectorList\";\nimport Loader from \"../loader/Loader\";\nimport DefaultSector from \"./DefaultSector\";\n\nconst AddSector = () => {\n    const emptyData = {name: '', sectors: [], agreeTerms: false};\n    const {loading, error, data} = useFetch({url: \"api/protected/users/sectors/me\"});\n\n    if (loading) {\n        return <Loader className=\"page-loader\"/>\n    }\n\n    return (\n        <>\n            {\n                (error || data[0].sectors.length > 0)\n                    ? <SectorList  {...data[0]}/> :\n                    <DefaultSector\n                        formData={emptyData}\n                        isEdit={false}\n                        selectedSectors={[]}\n                    />\n            }\n        </>\n    );\n};\n\n\nexport default AddSector;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,SAAS,GAAG;IAACC,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAK,CAAC;EAC5D,MAAM;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGhB,QAAQ,CAAC;IAACiB,GAAG,EAAE;EAAgC,CAAC,CAAC;EAEhF,IAAIH,OAAO,EAAE;IACT,oBAAOT,OAAA,CAACH,MAAM;MAACgB,SAAS,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC5C;EAEA,oBACIjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EAESR,KAAK,IAAIC,IAAI,CAAC,CAAC,CAAC,CAACJ,OAAO,CAACY,MAAM,GAAG,CAAC,gBAC9BnB,OAAA,CAACJ,UAAU;MAAA,GAAMe,IAAI,CAAC,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAC7BjB,OAAA,CAACF,aAAa;MACVsB,QAAQ,EAAEf,SAAU;MACpBgB,MAAM,EAAE,KAAM;MACdC,eAAe,EAAE;IAAG;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC,gBAEZ,CAAC;AAEX,CAAC;AAACb,EAAA,CArBID,SAAS;EAAA,QAEoBR,QAAQ;AAAA;AAAA4B,EAAA,GAFrCpB,SAAS;AAwBf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}